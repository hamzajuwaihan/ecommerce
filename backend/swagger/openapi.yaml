openapi: 3.0.1
info:
  title: Ecommerce API
  version: 1.0.0
  description: Illustration of the ecommerce website APIs.
paths:
  /api/products:
    summary: products related APIs
    description: >-
      This will be the main entry for products operations and will explain HTTP
      methods that can be done on products.
    get:
      summary: get all products.
      description: this will get all available products in the DB.
      operationId: getAllProducts
      parameters:
        - in: query
          name: page
          required: false
          description: The page number for pagination.
          schema:
            type: integer
        - in: query
          name: pageSize
          required: false
          description: The number of items per page.
          schema:
            type: integer
      responses:
        '200':
          description: >-
            A successful api result will contain zero or more products depending
            on products table.
          content:
            application/json:
              examples:
                all products res:
                  value: |
                    [
                     {
                         "id": 1,
                         "product_name": "Laptop X1",
                         "description": "Powerful laptop for professional use",
                         "stock_quantity": 100,
                         "min_stock": 10,
                         "max_stock": 150,
                         "category_id": 1,
                         "created_at": "2024-01-06T19:21:38.831Z",
                         "updated_at": "2024-01-06T19:21:38.831Z",
                         "category_name": "Electronics",
                         "image_url": "image_url_1"
                     },
                     {
                         "id": 2,
                         "product_name": "Cotton T-Shirt",
                         "description": "Comfortable cotton T-shirt",
                         "stock_quantity": 200,
                         "min_stock": 20,
                         "max_stock": 300,
                         "category_id": 2,
                         "created_at": "2024-01-06T19:21:38.831Z",
                         "updated_at": "2024-01-06T19:21:38.831Z",
                         "category_name": "Clothing",
                         "image_url": "image_url_2"
                     }
                     ]
        '204':
          description: >-
            this happens when the DB has no products available.
          content:
            application/json:
              examples:
                no available products.:
                  value: '{}'
        default:
          description: Default error sample response
      tags:
        - Products
    post:
      summary: It will add a new product in DB.
      description: >-
        If all required information are present, then a new id will be generated
        along with the provided product information as a record in DB.
      operationId: postNewProduct
      responses:
        '200':
          description: A successful api result will contain the new returned product.
          content:
            application/json:
              examples:
                successful new product response:
                  value: |
                    {
                      "id": 15,
                      "product_name": "UltraBook Pro",
                      "description": "Slim and powerful ultrabook for professional use.",
                      "stock_quantity": 75,
                      "min_stock": 25,
                      "max_stock": 200,
                      "category_id": 1,
                      "created_at": "2024-12-02T09:30:00.000Z",
                      "updated_at": "2024-12-02T12:45:00.000Z"
                    }
        default:
          description: Default error sample response
      tags:
        - Products
  /api/products/{id}:
    summary: This path is for specific product.
    description: Will get all information about the specified product with category name.
    parameters:
      - in: path
        name: id
        required: true
        description: The ID of the product to retrieve.
        schema:
          type: integer
    get:
      summary: Get product by ID.
      description: Retrieves a specific product based on the provided ID.
      operationId: 'operationId: getProductById'
      responses:
        '200':
          description: successful response of a specific product.
          content:
            application/json:
              examples:
                A successful API result will contain the detailed information about the specified product.:
                  value: >-
                    {

                    "id": 15,

                    "product_name": "UltraBook Pro",

                    "description": "Slim and powerful ultrabook for professional
                    use.",

                    "stock_quantity": 75,

                    "min_stock": 25,

                    "max_stock": 200,

                    "category_id": 1,

                    "category_name":"Electronics",

                    "created_at": "2024-12-02T09:30:00.000Z",

                    "updated_at": "2024-12-02T12:45:00.000Z"

                    }
        '404':
          description: >-
            no product was found with the provided id.
          content:
            application/json:
              examples:
                product is not found:
                  value: '{ "error": "Product not found" }'
        default:
          description: Default error sample response
      tags:
        - Products
